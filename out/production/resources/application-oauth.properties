##spring.devtools.livereload.enabled=true
spring.main.allow-bean-definition-overriding=true

##spring.mustache.cache=false
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

##spring.jpa.show-sql=true
##spring.jpa.hibernate.ddl-auto=create

##spring.h2.console.enabled=true

##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
##spring.jpa.properties.hibernate.dialect.storage_engine=innodb
##spring.datasource.hikari.jdbc-url=jdbc:h2:tcp://localhost/~/test;MODE=MYSQL
##spring.datasource.hikari.username=sa


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=none

spring.datasource.url=jdbc:mariadb://food-travel.ckgbgms814pq.ap-northeast-2.rds.amazonaws.com:3306/food_travel
spring.datasource.username=jung
spring.datasource.password=free1004
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.security.oauth2.client.registration.google.client-id=69068053907-lqp224vsllppear9dcvon39lhoafudd2.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=GcWsSymUvuNRxlMdFCkLwLAo
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.facebook.client-id=3623806081033905
spring.security.oauth2.client.registration.facebook.client-secret=aae00cc9e34efaf3d0cea1ac56ae0d6a
spring.security.oauth2.client.registration.facebook.scope=public_profile,email



# registration
spring.security.oauth2.client.registration.naver.client-id=3MrFVPmZEPACLZVLj946
spring.security.oauth2.client.registration.naver.client-secret=8yuMcmEA1X
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
# 네이버에서는 스프링 시큐리티를 공식 지원하지 않기 때문에 그동안 CommonOAuth2Provider 에서 해주던 값들도 전부 수동으로 입력해야 한다.
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# 기준이 되는 user_name 의 이름을 네이버에서는 response 로 해야한다. 이유는 네이버의 회원 조회 시 반환되는 JSON 형태 때문이다.

spring.security.oauth2.client.registration.kakao.client-id=915d076d22f29774a77fc3da4b17e8d0
spring.security.oauth2.client.registration.kakao.client-secret=5XjcxsfTxLhU4XK78ANdGkl7kmbrYKWT
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile,account_email
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

## kAKAO Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id



## aws s3
cloud.aws.credentials.accessKey=AKIATNM2WZWT5MN6SHHN
cloud.aws.credentials.secretKey=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
cloud.aws.s3.bucket=food-travel
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto=false

# SEED 알고리즘 비밀키
pbszUserKey="testCrypt2021!@#"
pbszIV="12345678901234567"


